# coding: utf-8

"""
    EVE Swagger Interface

    An OpenAPI for EVE Online  # noqa: E501

    OpenAPI spec version: 0.8.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetCharactersCharacterIdStatsMarket(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'accept_contracts_courier': 'int',
        'accept_contracts_item_exchange': 'int',
        'buy_orders_placed': 'int',
        'cancel_market_order': 'int',
        'create_contracts_auction': 'int',
        'create_contracts_courier': 'int',
        'create_contracts_item_exchange': 'int',
        'deliver_courier_contract': 'int',
        'isk_gained': 'int',
        'isk_spent': 'int',
        'modify_market_order': 'int',
        'search_contracts': 'int',
        'sell_orders_placed': 'int'
    }

    attribute_map = {
        'accept_contracts_courier': 'accept_contracts_courier',
        'accept_contracts_item_exchange': 'accept_contracts_item_exchange',
        'buy_orders_placed': 'buy_orders_placed',
        'cancel_market_order': 'cancel_market_order',
        'create_contracts_auction': 'create_contracts_auction',
        'create_contracts_courier': 'create_contracts_courier',
        'create_contracts_item_exchange': 'create_contracts_item_exchange',
        'deliver_courier_contract': 'deliver_courier_contract',
        'isk_gained': 'isk_gained',
        'isk_spent': 'isk_spent',
        'modify_market_order': 'modify_market_order',
        'search_contracts': 'search_contracts',
        'sell_orders_placed': 'sell_orders_placed'
    }

    def __init__(self, accept_contracts_courier=None, accept_contracts_item_exchange=None, buy_orders_placed=None, cancel_market_order=None, create_contracts_auction=None, create_contracts_courier=None, create_contracts_item_exchange=None, deliver_courier_contract=None, isk_gained=None, isk_spent=None, modify_market_order=None, search_contracts=None, sell_orders_placed=None):  # noqa: E501
        """GetCharactersCharacterIdStatsMarket - a model defined in Swagger"""  # noqa: E501

        self._accept_contracts_courier = None
        self._accept_contracts_item_exchange = None
        self._buy_orders_placed = None
        self._cancel_market_order = None
        self._create_contracts_auction = None
        self._create_contracts_courier = None
        self._create_contracts_item_exchange = None
        self._deliver_courier_contract = None
        self._isk_gained = None
        self._isk_spent = None
        self._modify_market_order = None
        self._search_contracts = None
        self._sell_orders_placed = None
        self.discriminator = None

        if accept_contracts_courier is not None:
            self.accept_contracts_courier = accept_contracts_courier
        if accept_contracts_item_exchange is not None:
            self.accept_contracts_item_exchange = accept_contracts_item_exchange
        if buy_orders_placed is not None:
            self.buy_orders_placed = buy_orders_placed
        if cancel_market_order is not None:
            self.cancel_market_order = cancel_market_order
        if create_contracts_auction is not None:
            self.create_contracts_auction = create_contracts_auction
        if create_contracts_courier is not None:
            self.create_contracts_courier = create_contracts_courier
        if create_contracts_item_exchange is not None:
            self.create_contracts_item_exchange = create_contracts_item_exchange
        if deliver_courier_contract is not None:
            self.deliver_courier_contract = deliver_courier_contract
        if isk_gained is not None:
            self.isk_gained = isk_gained
        if isk_spent is not None:
            self.isk_spent = isk_spent
        if modify_market_order is not None:
            self.modify_market_order = modify_market_order
        if search_contracts is not None:
            self.search_contracts = search_contracts
        if sell_orders_placed is not None:
            self.sell_orders_placed = sell_orders_placed

    @property
    def accept_contracts_courier(self):
        """Gets the accept_contracts_courier of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        accept_contracts_courier integer  # noqa: E501

        :return: The accept_contracts_courier of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._accept_contracts_courier

    @accept_contracts_courier.setter
    def accept_contracts_courier(self, accept_contracts_courier):
        """Sets the accept_contracts_courier of this GetCharactersCharacterIdStatsMarket.

        accept_contracts_courier integer  # noqa: E501

        :param accept_contracts_courier: The accept_contracts_courier of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._accept_contracts_courier = accept_contracts_courier

    @property
    def accept_contracts_item_exchange(self):
        """Gets the accept_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        accept_contracts_item_exchange integer  # noqa: E501

        :return: The accept_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._accept_contracts_item_exchange

    @accept_contracts_item_exchange.setter
    def accept_contracts_item_exchange(self, accept_contracts_item_exchange):
        """Sets the accept_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.

        accept_contracts_item_exchange integer  # noqa: E501

        :param accept_contracts_item_exchange: The accept_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._accept_contracts_item_exchange = accept_contracts_item_exchange

    @property
    def buy_orders_placed(self):
        """Gets the buy_orders_placed of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        buy_orders_placed integer  # noqa: E501

        :return: The buy_orders_placed of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._buy_orders_placed

    @buy_orders_placed.setter
    def buy_orders_placed(self, buy_orders_placed):
        """Sets the buy_orders_placed of this GetCharactersCharacterIdStatsMarket.

        buy_orders_placed integer  # noqa: E501

        :param buy_orders_placed: The buy_orders_placed of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._buy_orders_placed = buy_orders_placed

    @property
    def cancel_market_order(self):
        """Gets the cancel_market_order of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        cancel_market_order integer  # noqa: E501

        :return: The cancel_market_order of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._cancel_market_order

    @cancel_market_order.setter
    def cancel_market_order(self, cancel_market_order):
        """Sets the cancel_market_order of this GetCharactersCharacterIdStatsMarket.

        cancel_market_order integer  # noqa: E501

        :param cancel_market_order: The cancel_market_order of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._cancel_market_order = cancel_market_order

    @property
    def create_contracts_auction(self):
        """Gets the create_contracts_auction of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        create_contracts_auction integer  # noqa: E501

        :return: The create_contracts_auction of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._create_contracts_auction

    @create_contracts_auction.setter
    def create_contracts_auction(self, create_contracts_auction):
        """Sets the create_contracts_auction of this GetCharactersCharacterIdStatsMarket.

        create_contracts_auction integer  # noqa: E501

        :param create_contracts_auction: The create_contracts_auction of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._create_contracts_auction = create_contracts_auction

    @property
    def create_contracts_courier(self):
        """Gets the create_contracts_courier of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        create_contracts_courier integer  # noqa: E501

        :return: The create_contracts_courier of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._create_contracts_courier

    @create_contracts_courier.setter
    def create_contracts_courier(self, create_contracts_courier):
        """Sets the create_contracts_courier of this GetCharactersCharacterIdStatsMarket.

        create_contracts_courier integer  # noqa: E501

        :param create_contracts_courier: The create_contracts_courier of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._create_contracts_courier = create_contracts_courier

    @property
    def create_contracts_item_exchange(self):
        """Gets the create_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        create_contracts_item_exchange integer  # noqa: E501

        :return: The create_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._create_contracts_item_exchange

    @create_contracts_item_exchange.setter
    def create_contracts_item_exchange(self, create_contracts_item_exchange):
        """Sets the create_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.

        create_contracts_item_exchange integer  # noqa: E501

        :param create_contracts_item_exchange: The create_contracts_item_exchange of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._create_contracts_item_exchange = create_contracts_item_exchange

    @property
    def deliver_courier_contract(self):
        """Gets the deliver_courier_contract of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        deliver_courier_contract integer  # noqa: E501

        :return: The deliver_courier_contract of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._deliver_courier_contract

    @deliver_courier_contract.setter
    def deliver_courier_contract(self, deliver_courier_contract):
        """Sets the deliver_courier_contract of this GetCharactersCharacterIdStatsMarket.

        deliver_courier_contract integer  # noqa: E501

        :param deliver_courier_contract: The deliver_courier_contract of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._deliver_courier_contract = deliver_courier_contract

    @property
    def isk_gained(self):
        """Gets the isk_gained of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        isk_gained integer  # noqa: E501

        :return: The isk_gained of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._isk_gained

    @isk_gained.setter
    def isk_gained(self, isk_gained):
        """Sets the isk_gained of this GetCharactersCharacterIdStatsMarket.

        isk_gained integer  # noqa: E501

        :param isk_gained: The isk_gained of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._isk_gained = isk_gained

    @property
    def isk_spent(self):
        """Gets the isk_spent of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        isk_spent integer  # noqa: E501

        :return: The isk_spent of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._isk_spent

    @isk_spent.setter
    def isk_spent(self, isk_spent):
        """Sets the isk_spent of this GetCharactersCharacterIdStatsMarket.

        isk_spent integer  # noqa: E501

        :param isk_spent: The isk_spent of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._isk_spent = isk_spent

    @property
    def modify_market_order(self):
        """Gets the modify_market_order of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        modify_market_order integer  # noqa: E501

        :return: The modify_market_order of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._modify_market_order

    @modify_market_order.setter
    def modify_market_order(self, modify_market_order):
        """Sets the modify_market_order of this GetCharactersCharacterIdStatsMarket.

        modify_market_order integer  # noqa: E501

        :param modify_market_order: The modify_market_order of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._modify_market_order = modify_market_order

    @property
    def search_contracts(self):
        """Gets the search_contracts of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        search_contracts integer  # noqa: E501

        :return: The search_contracts of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._search_contracts

    @search_contracts.setter
    def search_contracts(self, search_contracts):
        """Sets the search_contracts of this GetCharactersCharacterIdStatsMarket.

        search_contracts integer  # noqa: E501

        :param search_contracts: The search_contracts of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._search_contracts = search_contracts

    @property
    def sell_orders_placed(self):
        """Gets the sell_orders_placed of this GetCharactersCharacterIdStatsMarket.  # noqa: E501

        sell_orders_placed integer  # noqa: E501

        :return: The sell_orders_placed of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :rtype: int
        """
        return self._sell_orders_placed

    @sell_orders_placed.setter
    def sell_orders_placed(self, sell_orders_placed):
        """Sets the sell_orders_placed of this GetCharactersCharacterIdStatsMarket.

        sell_orders_placed integer  # noqa: E501

        :param sell_orders_placed: The sell_orders_placed of this GetCharactersCharacterIdStatsMarket.  # noqa: E501
        :type: int
        """

        self._sell_orders_placed = sell_orders_placed

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCharactersCharacterIdStatsMarket):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

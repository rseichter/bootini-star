# coding: utf-8

"""
    EVE Swagger Interface

    An OpenAPI for EVE Online  # noqa: E501

    OpenAPI spec version: 0.8.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetCharactersCharacterIdStatsSocial(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'add_contact_bad': 'int',
        'add_contact_good': 'int',
        'add_contact_high': 'int',
        'add_contact_horrible': 'int',
        'add_contact_neutral': 'int',
        'add_note': 'int',
        'added_as_contact_bad': 'int',
        'added_as_contact_good': 'int',
        'added_as_contact_high': 'int',
        'added_as_contact_horrible': 'int',
        'added_as_contact_neutral': 'int',
        'calendar_event_created': 'int',
        'chat_messages_alliance': 'int',
        'chat_messages_constellation': 'int',
        'chat_messages_corporation': 'int',
        'chat_messages_fleet': 'int',
        'chat_messages_region': 'int',
        'chat_messages_solarsystem': 'int',
        'chat_messages_warfaction': 'int',
        'chat_total_message_length': 'int',
        'direct_trades': 'int',
        'fleet_broadcasts': 'int',
        'fleet_joins': 'int',
        'mails_received': 'int',
        'mails_sent': 'int'
    }

    attribute_map = {
        'add_contact_bad': 'add_contact_bad',
        'add_contact_good': 'add_contact_good',
        'add_contact_high': 'add_contact_high',
        'add_contact_horrible': 'add_contact_horrible',
        'add_contact_neutral': 'add_contact_neutral',
        'add_note': 'add_note',
        'added_as_contact_bad': 'added_as_contact_bad',
        'added_as_contact_good': 'added_as_contact_good',
        'added_as_contact_high': 'added_as_contact_high',
        'added_as_contact_horrible': 'added_as_contact_horrible',
        'added_as_contact_neutral': 'added_as_contact_neutral',
        'calendar_event_created': 'calendar_event_created',
        'chat_messages_alliance': 'chat_messages_alliance',
        'chat_messages_constellation': 'chat_messages_constellation',
        'chat_messages_corporation': 'chat_messages_corporation',
        'chat_messages_fleet': 'chat_messages_fleet',
        'chat_messages_region': 'chat_messages_region',
        'chat_messages_solarsystem': 'chat_messages_solarsystem',
        'chat_messages_warfaction': 'chat_messages_warfaction',
        'chat_total_message_length': 'chat_total_message_length',
        'direct_trades': 'direct_trades',
        'fleet_broadcasts': 'fleet_broadcasts',
        'fleet_joins': 'fleet_joins',
        'mails_received': 'mails_received',
        'mails_sent': 'mails_sent'
    }

    def __init__(self, add_contact_bad=None, add_contact_good=None, add_contact_high=None, add_contact_horrible=None, add_contact_neutral=None, add_note=None, added_as_contact_bad=None, added_as_contact_good=None, added_as_contact_high=None, added_as_contact_horrible=None, added_as_contact_neutral=None, calendar_event_created=None, chat_messages_alliance=None, chat_messages_constellation=None, chat_messages_corporation=None, chat_messages_fleet=None, chat_messages_region=None, chat_messages_solarsystem=None, chat_messages_warfaction=None, chat_total_message_length=None, direct_trades=None, fleet_broadcasts=None, fleet_joins=None, mails_received=None, mails_sent=None):  # noqa: E501
        """GetCharactersCharacterIdStatsSocial - a model defined in Swagger"""  # noqa: E501

        self._add_contact_bad = None
        self._add_contact_good = None
        self._add_contact_high = None
        self._add_contact_horrible = None
        self._add_contact_neutral = None
        self._add_note = None
        self._added_as_contact_bad = None
        self._added_as_contact_good = None
        self._added_as_contact_high = None
        self._added_as_contact_horrible = None
        self._added_as_contact_neutral = None
        self._calendar_event_created = None
        self._chat_messages_alliance = None
        self._chat_messages_constellation = None
        self._chat_messages_corporation = None
        self._chat_messages_fleet = None
        self._chat_messages_region = None
        self._chat_messages_solarsystem = None
        self._chat_messages_warfaction = None
        self._chat_total_message_length = None
        self._direct_trades = None
        self._fleet_broadcasts = None
        self._fleet_joins = None
        self._mails_received = None
        self._mails_sent = None
        self.discriminator = None

        if add_contact_bad is not None:
            self.add_contact_bad = add_contact_bad
        if add_contact_good is not None:
            self.add_contact_good = add_contact_good
        if add_contact_high is not None:
            self.add_contact_high = add_contact_high
        if add_contact_horrible is not None:
            self.add_contact_horrible = add_contact_horrible
        if add_contact_neutral is not None:
            self.add_contact_neutral = add_contact_neutral
        if add_note is not None:
            self.add_note = add_note
        if added_as_contact_bad is not None:
            self.added_as_contact_bad = added_as_contact_bad
        if added_as_contact_good is not None:
            self.added_as_contact_good = added_as_contact_good
        if added_as_contact_high is not None:
            self.added_as_contact_high = added_as_contact_high
        if added_as_contact_horrible is not None:
            self.added_as_contact_horrible = added_as_contact_horrible
        if added_as_contact_neutral is not None:
            self.added_as_contact_neutral = added_as_contact_neutral
        if calendar_event_created is not None:
            self.calendar_event_created = calendar_event_created
        if chat_messages_alliance is not None:
            self.chat_messages_alliance = chat_messages_alliance
        if chat_messages_constellation is not None:
            self.chat_messages_constellation = chat_messages_constellation
        if chat_messages_corporation is not None:
            self.chat_messages_corporation = chat_messages_corporation
        if chat_messages_fleet is not None:
            self.chat_messages_fleet = chat_messages_fleet
        if chat_messages_region is not None:
            self.chat_messages_region = chat_messages_region
        if chat_messages_solarsystem is not None:
            self.chat_messages_solarsystem = chat_messages_solarsystem
        if chat_messages_warfaction is not None:
            self.chat_messages_warfaction = chat_messages_warfaction
        if chat_total_message_length is not None:
            self.chat_total_message_length = chat_total_message_length
        if direct_trades is not None:
            self.direct_trades = direct_trades
        if fleet_broadcasts is not None:
            self.fleet_broadcasts = fleet_broadcasts
        if fleet_joins is not None:
            self.fleet_joins = fleet_joins
        if mails_received is not None:
            self.mails_received = mails_received
        if mails_sent is not None:
            self.mails_sent = mails_sent

    @property
    def add_contact_bad(self):
        """Gets the add_contact_bad of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        add_contact_bad integer  # noqa: E501

        :return: The add_contact_bad of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._add_contact_bad

    @add_contact_bad.setter
    def add_contact_bad(self, add_contact_bad):
        """Sets the add_contact_bad of this GetCharactersCharacterIdStatsSocial.

        add_contact_bad integer  # noqa: E501

        :param add_contact_bad: The add_contact_bad of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._add_contact_bad = add_contact_bad

    @property
    def add_contact_good(self):
        """Gets the add_contact_good of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        add_contact_good integer  # noqa: E501

        :return: The add_contact_good of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._add_contact_good

    @add_contact_good.setter
    def add_contact_good(self, add_contact_good):
        """Sets the add_contact_good of this GetCharactersCharacterIdStatsSocial.

        add_contact_good integer  # noqa: E501

        :param add_contact_good: The add_contact_good of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._add_contact_good = add_contact_good

    @property
    def add_contact_high(self):
        """Gets the add_contact_high of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        add_contact_high integer  # noqa: E501

        :return: The add_contact_high of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._add_contact_high

    @add_contact_high.setter
    def add_contact_high(self, add_contact_high):
        """Sets the add_contact_high of this GetCharactersCharacterIdStatsSocial.

        add_contact_high integer  # noqa: E501

        :param add_contact_high: The add_contact_high of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._add_contact_high = add_contact_high

    @property
    def add_contact_horrible(self):
        """Gets the add_contact_horrible of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        add_contact_horrible integer  # noqa: E501

        :return: The add_contact_horrible of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._add_contact_horrible

    @add_contact_horrible.setter
    def add_contact_horrible(self, add_contact_horrible):
        """Sets the add_contact_horrible of this GetCharactersCharacterIdStatsSocial.

        add_contact_horrible integer  # noqa: E501

        :param add_contact_horrible: The add_contact_horrible of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._add_contact_horrible = add_contact_horrible

    @property
    def add_contact_neutral(self):
        """Gets the add_contact_neutral of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        add_contact_neutral integer  # noqa: E501

        :return: The add_contact_neutral of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._add_contact_neutral

    @add_contact_neutral.setter
    def add_contact_neutral(self, add_contact_neutral):
        """Sets the add_contact_neutral of this GetCharactersCharacterIdStatsSocial.

        add_contact_neutral integer  # noqa: E501

        :param add_contact_neutral: The add_contact_neutral of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._add_contact_neutral = add_contact_neutral

    @property
    def add_note(self):
        """Gets the add_note of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        add_note integer  # noqa: E501

        :return: The add_note of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._add_note

    @add_note.setter
    def add_note(self, add_note):
        """Sets the add_note of this GetCharactersCharacterIdStatsSocial.

        add_note integer  # noqa: E501

        :param add_note: The add_note of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._add_note = add_note

    @property
    def added_as_contact_bad(self):
        """Gets the added_as_contact_bad of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        added_as_contact_bad integer  # noqa: E501

        :return: The added_as_contact_bad of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._added_as_contact_bad

    @added_as_contact_bad.setter
    def added_as_contact_bad(self, added_as_contact_bad):
        """Sets the added_as_contact_bad of this GetCharactersCharacterIdStatsSocial.

        added_as_contact_bad integer  # noqa: E501

        :param added_as_contact_bad: The added_as_contact_bad of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._added_as_contact_bad = added_as_contact_bad

    @property
    def added_as_contact_good(self):
        """Gets the added_as_contact_good of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        added_as_contact_good integer  # noqa: E501

        :return: The added_as_contact_good of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._added_as_contact_good

    @added_as_contact_good.setter
    def added_as_contact_good(self, added_as_contact_good):
        """Sets the added_as_contact_good of this GetCharactersCharacterIdStatsSocial.

        added_as_contact_good integer  # noqa: E501

        :param added_as_contact_good: The added_as_contact_good of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._added_as_contact_good = added_as_contact_good

    @property
    def added_as_contact_high(self):
        """Gets the added_as_contact_high of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        added_as_contact_high integer  # noqa: E501

        :return: The added_as_contact_high of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._added_as_contact_high

    @added_as_contact_high.setter
    def added_as_contact_high(self, added_as_contact_high):
        """Sets the added_as_contact_high of this GetCharactersCharacterIdStatsSocial.

        added_as_contact_high integer  # noqa: E501

        :param added_as_contact_high: The added_as_contact_high of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._added_as_contact_high = added_as_contact_high

    @property
    def added_as_contact_horrible(self):
        """Gets the added_as_contact_horrible of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        added_as_contact_horrible integer  # noqa: E501

        :return: The added_as_contact_horrible of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._added_as_contact_horrible

    @added_as_contact_horrible.setter
    def added_as_contact_horrible(self, added_as_contact_horrible):
        """Sets the added_as_contact_horrible of this GetCharactersCharacterIdStatsSocial.

        added_as_contact_horrible integer  # noqa: E501

        :param added_as_contact_horrible: The added_as_contact_horrible of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._added_as_contact_horrible = added_as_contact_horrible

    @property
    def added_as_contact_neutral(self):
        """Gets the added_as_contact_neutral of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        added_as_contact_neutral integer  # noqa: E501

        :return: The added_as_contact_neutral of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._added_as_contact_neutral

    @added_as_contact_neutral.setter
    def added_as_contact_neutral(self, added_as_contact_neutral):
        """Sets the added_as_contact_neutral of this GetCharactersCharacterIdStatsSocial.

        added_as_contact_neutral integer  # noqa: E501

        :param added_as_contact_neutral: The added_as_contact_neutral of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._added_as_contact_neutral = added_as_contact_neutral

    @property
    def calendar_event_created(self):
        """Gets the calendar_event_created of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        calendar_event_created integer  # noqa: E501

        :return: The calendar_event_created of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._calendar_event_created

    @calendar_event_created.setter
    def calendar_event_created(self, calendar_event_created):
        """Sets the calendar_event_created of this GetCharactersCharacterIdStatsSocial.

        calendar_event_created integer  # noqa: E501

        :param calendar_event_created: The calendar_event_created of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._calendar_event_created = calendar_event_created

    @property
    def chat_messages_alliance(self):
        """Gets the chat_messages_alliance of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_messages_alliance integer  # noqa: E501

        :return: The chat_messages_alliance of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_messages_alliance

    @chat_messages_alliance.setter
    def chat_messages_alliance(self, chat_messages_alliance):
        """Sets the chat_messages_alliance of this GetCharactersCharacterIdStatsSocial.

        chat_messages_alliance integer  # noqa: E501

        :param chat_messages_alliance: The chat_messages_alliance of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_messages_alliance = chat_messages_alliance

    @property
    def chat_messages_constellation(self):
        """Gets the chat_messages_constellation of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_messages_constellation integer  # noqa: E501

        :return: The chat_messages_constellation of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_messages_constellation

    @chat_messages_constellation.setter
    def chat_messages_constellation(self, chat_messages_constellation):
        """Sets the chat_messages_constellation of this GetCharactersCharacterIdStatsSocial.

        chat_messages_constellation integer  # noqa: E501

        :param chat_messages_constellation: The chat_messages_constellation of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_messages_constellation = chat_messages_constellation

    @property
    def chat_messages_corporation(self):
        """Gets the chat_messages_corporation of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_messages_corporation integer  # noqa: E501

        :return: The chat_messages_corporation of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_messages_corporation

    @chat_messages_corporation.setter
    def chat_messages_corporation(self, chat_messages_corporation):
        """Sets the chat_messages_corporation of this GetCharactersCharacterIdStatsSocial.

        chat_messages_corporation integer  # noqa: E501

        :param chat_messages_corporation: The chat_messages_corporation of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_messages_corporation = chat_messages_corporation

    @property
    def chat_messages_fleet(self):
        """Gets the chat_messages_fleet of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_messages_fleet integer  # noqa: E501

        :return: The chat_messages_fleet of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_messages_fleet

    @chat_messages_fleet.setter
    def chat_messages_fleet(self, chat_messages_fleet):
        """Sets the chat_messages_fleet of this GetCharactersCharacterIdStatsSocial.

        chat_messages_fleet integer  # noqa: E501

        :param chat_messages_fleet: The chat_messages_fleet of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_messages_fleet = chat_messages_fleet

    @property
    def chat_messages_region(self):
        """Gets the chat_messages_region of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_messages_region integer  # noqa: E501

        :return: The chat_messages_region of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_messages_region

    @chat_messages_region.setter
    def chat_messages_region(self, chat_messages_region):
        """Sets the chat_messages_region of this GetCharactersCharacterIdStatsSocial.

        chat_messages_region integer  # noqa: E501

        :param chat_messages_region: The chat_messages_region of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_messages_region = chat_messages_region

    @property
    def chat_messages_solarsystem(self):
        """Gets the chat_messages_solarsystem of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_messages_solarsystem integer  # noqa: E501

        :return: The chat_messages_solarsystem of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_messages_solarsystem

    @chat_messages_solarsystem.setter
    def chat_messages_solarsystem(self, chat_messages_solarsystem):
        """Sets the chat_messages_solarsystem of this GetCharactersCharacterIdStatsSocial.

        chat_messages_solarsystem integer  # noqa: E501

        :param chat_messages_solarsystem: The chat_messages_solarsystem of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_messages_solarsystem = chat_messages_solarsystem

    @property
    def chat_messages_warfaction(self):
        """Gets the chat_messages_warfaction of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_messages_warfaction integer  # noqa: E501

        :return: The chat_messages_warfaction of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_messages_warfaction

    @chat_messages_warfaction.setter
    def chat_messages_warfaction(self, chat_messages_warfaction):
        """Sets the chat_messages_warfaction of this GetCharactersCharacterIdStatsSocial.

        chat_messages_warfaction integer  # noqa: E501

        :param chat_messages_warfaction: The chat_messages_warfaction of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_messages_warfaction = chat_messages_warfaction

    @property
    def chat_total_message_length(self):
        """Gets the chat_total_message_length of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        chat_total_message_length integer  # noqa: E501

        :return: The chat_total_message_length of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._chat_total_message_length

    @chat_total_message_length.setter
    def chat_total_message_length(self, chat_total_message_length):
        """Sets the chat_total_message_length of this GetCharactersCharacterIdStatsSocial.

        chat_total_message_length integer  # noqa: E501

        :param chat_total_message_length: The chat_total_message_length of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._chat_total_message_length = chat_total_message_length

    @property
    def direct_trades(self):
        """Gets the direct_trades of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        direct_trades integer  # noqa: E501

        :return: The direct_trades of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._direct_trades

    @direct_trades.setter
    def direct_trades(self, direct_trades):
        """Sets the direct_trades of this GetCharactersCharacterIdStatsSocial.

        direct_trades integer  # noqa: E501

        :param direct_trades: The direct_trades of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._direct_trades = direct_trades

    @property
    def fleet_broadcasts(self):
        """Gets the fleet_broadcasts of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        fleet_broadcasts integer  # noqa: E501

        :return: The fleet_broadcasts of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._fleet_broadcasts

    @fleet_broadcasts.setter
    def fleet_broadcasts(self, fleet_broadcasts):
        """Sets the fleet_broadcasts of this GetCharactersCharacterIdStatsSocial.

        fleet_broadcasts integer  # noqa: E501

        :param fleet_broadcasts: The fleet_broadcasts of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._fleet_broadcasts = fleet_broadcasts

    @property
    def fleet_joins(self):
        """Gets the fleet_joins of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        fleet_joins integer  # noqa: E501

        :return: The fleet_joins of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._fleet_joins

    @fleet_joins.setter
    def fleet_joins(self, fleet_joins):
        """Sets the fleet_joins of this GetCharactersCharacterIdStatsSocial.

        fleet_joins integer  # noqa: E501

        :param fleet_joins: The fleet_joins of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._fleet_joins = fleet_joins

    @property
    def mails_received(self):
        """Gets the mails_received of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        mails_received integer  # noqa: E501

        :return: The mails_received of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._mails_received

    @mails_received.setter
    def mails_received(self, mails_received):
        """Sets the mails_received of this GetCharactersCharacterIdStatsSocial.

        mails_received integer  # noqa: E501

        :param mails_received: The mails_received of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._mails_received = mails_received

    @property
    def mails_sent(self):
        """Gets the mails_sent of this GetCharactersCharacterIdStatsSocial.  # noqa: E501

        mails_sent integer  # noqa: E501

        :return: The mails_sent of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :rtype: int
        """
        return self._mails_sent

    @mails_sent.setter
    def mails_sent(self, mails_sent):
        """Sets the mails_sent of this GetCharactersCharacterIdStatsSocial.

        mails_sent integer  # noqa: E501

        :param mails_sent: The mails_sent of this GetCharactersCharacterIdStatsSocial.  # noqa: E501
        :type: int
        """

        self._mails_sent = mails_sent

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCharactersCharacterIdStatsSocial):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
